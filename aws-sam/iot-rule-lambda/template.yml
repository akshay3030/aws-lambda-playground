---
AWSTemplateFormatVersion: 2010-09-09
Description: AWS IoT Rules Engine Infra Stack

Resources:
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub dynamodb-table-${AWS::StackName}
      AttributeDefinitions:
        - AttributeName: deviceId
          AttributeType: S
      KeySchema:
        - AttributeName: deviceId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  WhereFuncRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub WhereFunc-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: !Sub /${AWS::StackName}/
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess

  ActionFuncRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ActionFunc-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: !Sub /${AWS::StackName}/
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess

Outputs:
  DynamoDBTableName:
    Value: !Ref DynamoDBTable
    Export:
      Name: !Sub ${AWS::StackName}-DynamoDBTableName

  WhereFuncRoleArn:
    Value: !GetAtt WhereFuncRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}-WhereFuncRoleArn

  ActionFuncRoleArn:
    Value: !GetAtt ActionFuncRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}-ActionFuncRoleArn

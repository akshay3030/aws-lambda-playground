---
AWSTemplateFormatVersion: 2010-09-09
Description: Dead Letter Queue

Parameters:
  FunctionName:
    Type: String
  QueueArn:
    Type: String
  TopicArn:
    Type: String

Resources:
  LambdaBasicExecRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: LambdaAssumeRolePolicy
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambdaFullAccess
  LambdaDeadLetterQueue:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          import cfnresponse
          import boto3
          import json
          def handler(event, context):
              if event['RequestType'] == 'Delete':
                  cfnresponse.send(event, context, cfnresponse.SUCCESS, {})
              function_name = event['ResourceProperties']['FunctionName']
              target_arn = event['ResourceProperties']['TargetArn']
              try:
                  resp = boto3.client('lambda').update_function_configuration(
                          FunctionName=function_name,
                          DeadLetterConfig={'TargetArn': target_arn})
              except:
                  cfnresponse.send(event, context, cfnresponse.FAILED, {})
              else:
                  response_data = {'Response': json.dumps(resp)}
                  cfnresponse.send(event, context, cfnresponse.SUCCESS, response_data)
      Handler: index.handler
      Role: !GetAtt LambdaBasicExecRole.Arn
      Runtime: python2.7
  CustomDeadLetterQueue:
    Type: Custom::DeadLetterQueue
    Version: 1.0
    Properties:
      ServiceToken: !GetAtt LambdaDeadLetterQueue.Arn
      FunctionName: !Ref FunctionName
      TargetArn: !Ref QueueArn
      #TargetArn: !Ref TopicArn

---
AWSTemplateFormatVersion: "2010-09-09"
Description: Lambda@Edge Sample Stack

Parameters:
  RetentionInDays:
    Type: Number
    Default: ${{self:custom.config.logGroup.retentionInDays}}
  S3BucketName:
    Type: String
    Default: ${{env:S3_BUCKET_NAME}}
  AcmIdentifier:
    Type: String
    Default: ${{env:ACM_IDENTIFIER}}
  HostedZoneId:
    Type: AWS::Route53::HostedZone::Id
    Default: ${{env:HOSTED_ZONE_ID}}

Resources:
  RewriterLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays:
        Ref: RetentionInDays

  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Ref: S3BucketName
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html

  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: WebsiteBucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action: s3:GetObject
            Resource:
              Fn::Sub: ${WebsiteBucket.Arn}/*
            Principal: "*"

  WebsiteDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        Comment:
          Ref: AWS::StackName
        PriceClass: PriceClass_200
        Aliases:
          - Ref: S3BucketName
        HttpVersion: http2
        DefaultRootObject: index.html
        Origins:
          - Id:
              Fn::Sub: S3-${WebsiteBucket}
            DomainName:
              Fn::GetAtt: [ WebsiteBucket, DomainName ]
            S3OriginConfig: {}
        DefaultCacheBehavior:
          TargetOriginId:
            Fn::Sub: S3-${WebsiteBucket}
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
          DefaultTTL: 600
          MaxTTL: 600
          Compress: true
        ViewerCertificate:
          SslSupportMethod: sni-only
          AcmCertificateArn:
            Fn::Sub: arn:aws:acm:${AWS::Region}:${AWS::AccountId}:certificate/${AcmIdentifier}

  WebSiteRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId:
        Ref: HostedZoneId
      Name:
        Ref: S3BucketName
      Type: A
      AliasTarget:
        HostedZoneId: Z2FDTNDATAQYW2
        DNSName:
          Fn::GetAtt: [ WebsiteDistribution, DomainName ]
